# -*- mode: ruby -*-
# vi: set ft=ruby :

#Script to set KB layout to Finnish.
$kb = <<-SCRIPT
printf '%s\n' 'XKBMODEL="pc105"' 'XKBLAYOUT="fi"' 'XKBVARIANT=""' 'XKBOPTIONS=""' '' 'BACKSPACE="guess"' | tee /etc/default/keyboard
SCRIPT

IMAGE = "bento/ubuntu-16.04"

Vagrant.configure("2") do |config|


	config.vm.provider "virtualbox" do |v|
		v.gui = false
		v.customize ["modifyvm", :id, "--vram", "128"]
	end
	
  config.vm.define "lab1" do |master|
	master.vm.box = IMAGE
	master.vm.hostname ="lab1"
	master.vm.network "private_network", ip: "10.0.0.10", virtualbox__intnet: "intnet1"
	master.vm.network "private_network", ip: "10.0.1.10", virtualbox__intnet: "intnet2"
	sshmaster(master)
	sshslave(master)
	bind9(master)
	ns1(master)
#	x(master)
#	nginx(master) #has to be manually started
  end

    config.vm.define "lab2" do |slave|
	slave.vm.box = IMAGE
	slave.vm.hostname ="lab2"
	slave.vm.network "private_network", ip: "10.0.0.11", virtualbox__intnet: "intnet1"
	sshslave(slave)
#	apache(slave)
	bind9(slave)
	ns2(slave)
  end

    config.vm.define "lab3" do |slave|
	slave.vm.box = IMAGE
	slave.vm.hostname ="lab3"
	slave.vm.network "private_network", ip: "10.0.1.11", virtualbox__intnet: "intnet2"
	sshslave(slave)
#	nodejs(slave) #has to be manually started

  end

config.vm.provision "shell", inline: <<-SHELL
  apt-get install -y traceroute lynx #avahi-daemon libnss-mdns 
SHELL

config.ssh.insert_key = false
config.ssh.forward_agent = false
config.ssh.private_key_path = ["C:/Users/AMaattanen/.ssh/vagrant", "~/.vagrant.d/insecure_private_key"]

#CUSTOM METHODS#

#WEEK1

#lab1 needs to be able to ssh into sshslaves
def sshmaster(machine)
machine.vm.provision "file", source: "C:/Users/AMaattanen/.ssh/vagrant", destination: "/home/vagrant/.ssh/id_rsa"
machine.vm.provision :shell, :inline =>"
	sudo chmod 600 /home/vagrant/.ssh/id_rsa
	"
end

#other labs need to accept the ssh using sshmasters key
def sshslave(machine)
machine.vm.provision "file", source: "C:/Users/AMaattanen/.ssh/vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
machine.vm.provision :shell, :inline =>"
	cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
	sudo chmod 700 /home/vagrant/.ssh/
	sudo chmod 644 /home/vagrant/.ssh/authorized_keys
	sudo chmod 644 /home/vagrant/.ssh/id_rsa.pub
	"
end

#WEEK2
	def x(machine) #set x11 screen resolution higher
		machine.vm.provision "shell", :inline => "apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
		machine.vm.provision "shell", :inline => "echo 'xrandr --size 1280x720' >> /home/vagrant/.profile"
		#set layout to finnish
		machine.vm.provision "shell", :inline => $kb
		#reboot to take effect of keyboard change, this will mess vagrant
		#WILL MESS UP VAGRANT, BOOT MANUALLY TO USE FINNISH KB IN X
		#machine.vm.provision "shell", :inline => "sudo reboot"
	end
	
	def apache(machine) #apache2 for lab2
		machine.vm.provision "shell", inline: <<-SHELL 
		apt-get install -y apache2
		printf "%s\t" "127.0.0.1" "maattanen.com" | tee -a /etc/hosts
		openssl req -x509 -out maattanen.crt -keyout maattanen.key \
		-newkey rsa:2048 -nodes -sha256 \
		-subj '/CN=maattanen.com' -extensions EXT -config <( \
		printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")
		cp -f /vagrant/apache.conf /etc/apache2/sites-available/maattanen.conf
		a2ensite maattanen
		a2enmod ssl userdir rewrite
		mkdir -p /home/vagrant/public_html/secure_secrets/ #create 
		cp -f /vagrant/htaccess /home/vagrant/public_html/secure_secrets/.htaccess
		touch /home/vagrant/public_html/secure_secrets/moi
		chmod 775 -R /home/vagrant/public_html
		chown -R $USER:$USER /home/vagrant/public_html
		service apache2 restart
		SHELL
	end

	def nodejs(machine) #nodejs for lab3
		machine.vm.provision "shell", inline: "apt-get install -y nodejs"
#RUNNING THE MACHINE HAS TO BE DONE BY HAND, VAGRANT DOESNT LIKE IT
#		machine.vm.provision "shell", inline: "nodejs /vagrant/helloworld.js"
	end

	def nginx(machine) #nginx for lab1
		machine.vm.provision "shell", inline: "apt-get update; apt-get install -y nginx" #will get error without apt-get update
		machine.vm.provision "shell", inline: "cp /vagrant/nginx.conf /etc/nginx/sites-available/default"
		machine.vm.provision "shell", inline: "chown root:root /etc/nginx/sites-available/default"
		machine.vm.provision "shell", inline: "chmod 744 /etc/nginx/sites-available/default"
#		machine.vm.provision "shell", inline: "rm /etc/nginx/sites-available/*"
#		machine.vm.provision "shell", inline: "cp /vagrant/nginx.conf /etc/nginx/sites-available/lab1.conf"
#STARTING THE NGINX HAS TO BE DONE BY HAND, VAGRANT DOESNT LIKE IT
#		machine.vm.provision "shell", inline: "nginx"
	end
	
	
	#WEEK4
	def ns1(machine)
		machine.vm.provision "shell", inline: <<-SHELL
		printf "%s\n" "" "127.0.0.1	ns1" | tee -a /etc/hosts
		printf "%s\n" "" "10.0.0.11	ns2" | tee -a /etc/hosts
		cp /vagrant/ns1.resolv.conf /etc/resolv.conf
		cp /vagrant/master.named.conf.options /etc/bind/named.conf.options
		cp /vagrant/master.named.conf /etc/bind/named.conf
		cp /vagrant/master.db.insec /etc/bind/db.insec
		cp /vagrant/master.dbrev.insec /etc/bind/dbrev.insec
		service bind9 restart
		SHELL
	end
	
	def ns2(machine)
		machine.vm.provision "shell", inline: <<-SHELL
		printf "%s\n" "" "127.0.0.1	ns2" | tee -a /etc/hosts
		printf "%s\n" "" "10.0.0.10	ns1" | tee -a /etc/hosts
		cp /vagrant/ns2.resolv.conf /etc/resolv.conf
		cp /vagrant/slave.named.conf /etc/bind/named.conf
		cp /vagrant/master.not.db.insec /etc/bind/master.not.insec
		cp /vagrant/master.not.dbrev.insec /etc/bind/master.dbrev.insec
		SHELL
	end	
	
	def bind9(machine)
		machine.vm.provision "shell", inline: <<-SHELL
		apt-get install -y bind9
		SHELL
	end
	
	
end